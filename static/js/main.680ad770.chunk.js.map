{"version":3,"sources":["lib/hljsStyles.js","lib/JupyterViewer.js","App.js","index.js"],"names":["hljsStyles","hljs","BlockSource","props","htmlContent","executionCount","metadata","cell","source","type","useState","prevDisplay","display","contentHeight","state","setState","newDisplay","undefined","codeBlockStyles","hljsStyle","lineNumberContainerStyle","lineNumberStyle","codeContainerStyle","className","showLineNumbers","language","style","vs","codeTagProps","fontFamily","fontSize","customStyle","width","margin","padding","boxSizing","background","border","overflow","color","map","item","index","join","flex","newSource","replaceAll","remarkPlugins","RemarkGFM","RemarkMath","rehypePlugins","RehypeKatex","highlighted","onClick","BlockOutput","outputs","contentRef","useCallback","node","offsetHeight","maxHeight","height","boxShadow","resize","ref","output","output_type","output_data","output_metadata","size","justifyContent","mediaAlign","src","alt","dangerouslySetInnerHTML","__html","output_traceback","console","log","JupyterViewer","DISPLAYS","clickCellIndex","rawIpynb","onMouseDown","indexOf","displaySource","displayOutput","left","center","right","defaultProps","App","nb_test","Fragment","name","onChange","e","target","files","reader","FileReader","readAsText","onload","JSON","parse","result","onerror","htmlFor","value","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.680ad770.chunk.js","sourcesContent":["import * as hljs from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst hljsStyles = {\r\n  'a11yDark': hljs.a11yDark,\r\n  'a11yLight': hljs.a11yLight,\r\n  'agate': hljs.agate,\r\n  'anOldHope': hljs.anOldHope,\r\n  'androidstudio': hljs.androidstudio,\r\n  'arduinoLight': hljs.arduinoLight,\r\n  'arta': hljs.arta,\r\n  'ascetic': hljs.ascetic,\r\n  'atelierCaveDark': hljs.atelierCaveDark,\r\n  'atelierCaveLight': hljs.atelierCaveLight,\r\n  'atelierDuneDark': hljs.atelierDuneDark,\r\n  'atelierDuneLight': hljs.atelierDuneLight,\r\n  'atelierEstuaryDark': hljs.atelierEstuaryDark,\r\n  'atelierEstuaryLight': hljs.atelierEstuaryLight,\r\n  'atelierForestDark': hljs.atelierForestDark,\r\n  'atelierForestLight': hljs.atelierForestLight,\r\n  'atelierHeathDark': hljs.atelierHeathDark,\r\n  'atelierHeathLight': hljs.atelierHeathLight,\r\n  'atelierLakesideDark': hljs.atelierLakesideDark,\r\n  'atelierLakesideLight': hljs.atelierLakesideLight,\r\n  'atelierPlateauDark': hljs.atelierPlateauDark,\r\n  'atelierPlateauLight': hljs.atelierPlateauLight,\r\n  'atelierSavannaDark': hljs.atelierSavannaDark,\r\n  'atelierSavannaLight': hljs.atelierSavannaLight,\r\n  'atelierSeasideDark': hljs.atelierSeasideDark,\r\n  'atelierSeasideLight': hljs.atelierSeasideLight,\r\n  'atelierSulphurpoolDark': hljs.atelierSulphurpoolDark,\r\n  'atelierSulphurpoolLight': hljs.atelierSulphurpoolLight,\r\n  'atomOneDarkReasonable': hljs.atomOneDarkReasonable,\r\n  'atomOneDark': hljs.atomOneDark,\r\n  'atomOneLight': hljs.atomOneLight,\r\n  'brownPaper': hljs.brownPaper,\r\n  'codepenEmbed': hljs.codepenEmbed,\r\n  'colorBrewer': hljs.colorBrewer,\r\n  'darcula': hljs.darcula,\r\n  'dark': hljs.dark,\r\n  'defaultStyle': hljs.defaultStyle,\r\n  'docco': hljs.docco,\r\n  'dracula': hljs.dracula,\r\n  'far': hljs.far,\r\n  'foundation': hljs.foundation,\r\n  'githubGist': hljs.githubGist,\r\n  'github': hljs.github,\r\n  'gml': hljs.gml,\r\n  'googlecode': hljs.googlecode,\r\n  'gradientDark': hljs.gradientDark,\r\n  'gradientLight': hljs.gradientLight,\r\n  'grayscale': hljs.grayscale,\r\n  'gruvboxDark': hljs.gruvboxDark,\r\n  'gruvboxLight': hljs.gruvboxLight,\r\n  'hopscotch': hljs.hopscotch,\r\n  'hybrid': hljs.hybrid,\r\n  'idea': hljs.idea,\r\n  'irBlack': hljs.irBlack,\r\n  'isblEditorDark': hljs.isblEditorDark,\r\n  'isblEditorLight': hljs.isblEditorLight,\r\n  'kimbieDark': hljs.kimbieDark,\r\n  'kimbieLight': hljs.kimbieLight,\r\n  'lightfair': hljs.lightfair,\r\n  'lioshi': hljs.lioshi,\r\n  'magula': hljs.magula,\r\n  'monoBlue': hljs.monoBlue,\r\n  'monokaiSublime': hljs.monokaiSublime,\r\n  'monokai': hljs.monokai,\r\n  'nightOwl': hljs.nightOwl,\r\n  'nnfxDark': hljs.nnfxDark,\r\n  'nnfx': hljs.nnfx,\r\n  'nord': hljs.nord,\r\n  'obsidian': hljs.obsidian,\r\n  'ocean': hljs.ocean,\r\n  'paraisoDark': hljs.paraisoDark,\r\n  'paraisoLight': hljs.paraisoLight,\r\n  'pojoaque': hljs.pojoaque,\r\n  'purebasic': hljs.purebasic,\r\n  'qtcreatorDark': hljs.qtcreatorDark,\r\n  'qtcreatorLight': hljs.qtcreatorLight,\r\n  'railscasts': hljs.railscasts,\r\n  'rainbow': hljs.rainbow,\r\n  'routeros': hljs.routeros,\r\n  'schoolBook': hljs.schoolBook,\r\n  'shadesOfPurple': hljs.shadesOfPurple,\r\n  'solarizedDark': hljs.solarizedDark,\r\n  'solarizedLight': hljs.solarizedLight,\r\n  'srcery': hljs.srcery,\r\n  'stackoverflowDark': hljs.stackoverflowDark,\r\n  'stackoverflowLight': hljs.stackoverflowLight,\r\n  'sunburst': hljs.sunburst,\r\n  'tomorrowNightBlue': hljs.tomorrowNightBlue,\r\n  'tomorrowNightBright': hljs.tomorrowNightBright,\r\n  'tomorrowNightEighties': hljs.tomorrowNightEighties,\r\n  'tomorrowNight': hljs.tomorrowNight,\r\n  'tomorrow': hljs.tomorrow,\r\n  'vs': hljs.vs,\r\n  'vs2015': hljs.vs2015,\r\n  'xcode': hljs.xcode,\r\n  'xt256': hljs.xt256,\r\n  'zenburn': hljs.zenburn,\r\n}\r\n\r\nexport default hljsStyles;","import React, {useCallback, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Ansi from \"ansi-to-react\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport RemarkGFM from \"remark-gfm\";\r\nimport RemarkMath from \"remark-math\";\r\nimport RehypeKatex from 'rehype-katex'\r\nimport 'katex/dist/katex.min.css';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n\r\nimport './JupyterViewer.scss';\r\nimport hljsStyles from './hljsStyles'\r\n\r\n\r\nfunction BlockSource(props) {\r\n  const metadata = props.cell['metadata'];\r\n  const source = props.cell['source'];\r\n  const type = props.cell['cell_type'];\r\n\r\n  const [state, setState] = useState({\r\n    prevDisplay: 1,\r\n    display: 1,\r\n    contentHeight: 0,\r\n  })\r\n\r\n  if (props.display !== state.prevDisplay) {\r\n    let newDisplay = props.display;\r\n    if (newDisplay === -1) {\r\n      if (metadata['jupyter'] !== undefined && metadata['jupyter']['source_hidden']) {\r\n        newDisplay = 0;\r\n      }\r\n    }\r\n\r\n    setState({...state, prevDisplay: props.display, display: newDisplay});\r\n  }\r\n\r\n  let htmlContent;\r\n  let executionCount;\r\n  if (type === 'code') {\r\n    executionCount = props.cell['execution_count'];\r\n\r\n    // SyntaxHighlighter originally doesn't separate the line numbers and the codes.\r\n    // The first SyntaxHighlighter is used to show line numbers only and the second is to show codes only.\r\n    const {hljsStyle, lineNumberContainerStyle, lineNumberStyle, codeContainerStyle} = props.codeBlockStyles ?\r\n      props.codeBlockStyles : {};\r\n    htmlContent = (\r\n      <div className=\"cell-content source-code\">\r\n        {!props.showLineNumbers ? null :\r\n          <SyntaxHighlighter\r\n            language={props.language}\r\n            style={hljsStyle ? hljsStyles[hljsStyle] : hljsStyles.vs}\r\n            codeTagProps={{\r\n              style: {\r\n                fontFamily: \"Menlo, Consolas, 'DejaVu Sans Mono', monospace\",\r\n                fontSize: \"13px\",\r\n              }\r\n            }}\r\n            customStyle={hljsStyle ? lineNumberContainerStyle : {\r\n              width: \"37px\",\r\n              margin: \"0 0 0 0\",\r\n              padding: \"5px 0 5px 0\",\r\n              boxSizing: \"border-box\",\r\n              background: \"#EEEEEE\",\r\n              border: \"solid 1px #E0E0E0\",\r\n              overflow: \"hidden\",\r\n            }}\r\n            showLineNumbers={true}\r\n            lineNumberStyle={hljsStyle ? lineNumberStyle : {\r\n              width: \"37px\",\r\n              padding: \"0 8px 0 8px\",\r\n              boxSizing: \"border-box\",\r\n              color: \"#999999\",\r\n            }}\r\n          >\r\n            {source.map((item, index) => index === 0 ? ' ' : '\\n').join('')}\r\n          </SyntaxHighlighter>\r\n        }\r\n\r\n        <div className=\"source-code-main\">\r\n          <SyntaxHighlighter\r\n            language={props.language}\r\n            style={hljsStyle ? hljsStyles[hljsStyle] : hljsStyles.vs}\r\n            codeTagProps={{\r\n              style: {\r\n                fontFamily: \"Menlo, Consolas, 'DejaVu Sans Mono', monospace\",\r\n                fontSize: \"13px\",\r\n              }\r\n            }}\r\n            customStyle={hljsStyle ? codeContainerStyle : {\r\n              margin: \"0 0 0 0\",\r\n              padding: \"5px 4px 5px 4px\",\r\n              boxSizing: \"border-box\",\r\n              background: \"#F5F5F5\",\r\n              border: \"solid 1px #E0E0E0\",\r\n              flex: 1,\r\n            }}\r\n          >\r\n            {source.join('')}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else if (type === 'markdown') {\r\n    // '$$' has to be in a separate new line to be rendered as a block math equation.\r\n    const re = /\\n?\\s*\\$\\$\\s*\\n?/g;\r\n    let newSource = source.join('').replaceAll(re, \"\\n$$$\\n\")\r\n\r\n    htmlContent = (\r\n      <div className=\"cell-content source-markdown\">\r\n        <ReactMarkdown\r\n          remarkPlugins={[RemarkGFM, RemarkMath]}\r\n          rehypePlugins={[RehypeKatex]}\r\n        >\r\n          {newSource}\r\n        </ReactMarkdown>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    htmlContent = (\r\n      <div>{`Cell Type ${type} not supported...`}</div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"block-source\">\r\n      <div\r\n        className={props.highlighted ? \"block-light-selected\" : \"block-light\"}\r\n        onClick={() => {\r\n          setState({...state, display: (state.display + 1) % 2})\r\n        }}\r\n      />\r\n\r\n      {state.display === 0 ? <div className=\"block-hidden\"/> :\r\n        <div className=\"cell-row\">\r\n          <pre className=\"cell-header source\">{executionCount ? `[${executionCount}]: ` : null}</pre>\r\n          {htmlContent}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BlockOutput(props) {\r\n  const metadata = props.cell['metadata'];\r\n  const outputs = props.cell['outputs']\r\n\r\n  const [state, setState] = useState({\r\n    highlighted: false,\r\n    prevDisplay: 1,\r\n    display: 1,\r\n    contentHeight: 0,\r\n  })\r\n  const contentRef = useCallback((node) => {\r\n    if (node) {\r\n      setState(state => ({...state, contentHeight: node.offsetHeight}));\r\n    }\r\n  }, [])\r\n\r\n  if (props.display !== state.prevDisplay) {\r\n    let newDisplay = props.display;\r\n    if (newDisplay === -1) {\r\n      if (metadata['collapsed'] || (metadata['jupyter'] !== undefined && metadata['jupyter']['outputs_hidden'])) {\r\n        newDisplay = 0;\r\n      }\r\n      else if (metadata['scrolled']) {\r\n        newDisplay = 2;\r\n      }\r\n    }\r\n\r\n    setState({...state, prevDisplay: props.display, display: newDisplay});\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"block-output\"\r\n    >\r\n      <div\r\n        className={props.highlighted ? \"block-light-selected\" : \"block-light\"}\r\n        onClick={() => {\r\n          setState({...state, display: (state.display + 1) % 3})\r\n        }}\r\n      />\r\n      {state.display === 0 ? <div className=\"block-hidden\"/> :\r\n        <div\r\n          className=\"block-output-content\"\r\n          style={state.display === 2 ? {\r\n            maxHeight: state.contentHeight,\r\n            height: 200,\r\n            boxShadow: \"inset 0 0 6px 2px rgb(0 0 0 / 30%)\",\r\n            resize: \"vertical\",\r\n          } : null}\r\n        >\r\n          <div ref={contentRef}>\r\n            {outputs.map((output, index) => {\r\n              let executionCount;\r\n              let htmlContent;\r\n              if ('output_type' in output) {\r\n                let output_type = output['output_type'];\r\n                switch (output_type) {\r\n                  // Stdout and stderr\r\n                  case 'stream':\r\n                    htmlContent = (\r\n                      <pre className={`cell-content ${output['name'] === 'stdout' ? 'output-std' : 'output-err'}`}>\r\n                        {output['text'].join('')}\r\n                      </pre>\r\n                    )\r\n\r\n                    break;\r\n                  // Output with execution_count\r\n                  case 'execute_result':\r\n                    executionCount = output['execution_count']\r\n\r\n                  // Output without execution_count\r\n                  case 'display_data':\r\n                    let output_data = output['data'];\r\n\r\n                    if ('image/png' in output_data) {\r\n                      let output_metadata = output['metadata'];\r\n                      let size = output_metadata && output_metadata['image/png'];\r\n                      htmlContent = (\r\n                        <div\r\n                          className=\"cell-content output-display\"\r\n                          style={{\r\n                            justifyContent: props.mediaAlign,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={`data:image/png;base64,${output_data['image/png']}`}\r\n                            width={size ? size['width'] : 'auto'}\r\n                            height={size ? size['height'] : 'auto'}\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                      )\r\n                    }\r\n                    else if ('text/html' in output_data) {\r\n                      htmlContent = (\r\n                        <div\r\n                          className=\"cell-content output-display\"\r\n                          style={{\r\n                            justifyContent: props.mediaAlign,\r\n                          }}\r\n                          dangerouslySetInnerHTML={{__html: output_data['text/html'].join('')}}\r\n                        />\r\n                      )\r\n                    }\r\n                    else if ('text/plain' in output_data) {\r\n                      htmlContent = (\r\n                        <pre className=\"cell-content output-std\">{output_data['text/plain'].join('')}</pre>\r\n                      )\r\n                    }\r\n\r\n                    break;\r\n                  // Exceptions\r\n                  case 'error':\r\n                    let output_traceback = output['traceback'].join('\\n');\r\n\r\n                    htmlContent = (\r\n                      <pre className=\"cell-content output-err\"><Ansi>{output_traceback}</Ansi></pre>\r\n                    )\r\n\r\n                    break;\r\n                  default:\r\n                    console.log('Unexpected output_type: ', output_type);\r\n                }\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"cell-row\"\r\n                >\r\n                  <pre className=\"cell-header output\">{executionCount ? `[${executionCount}]: ` : null}</pre>\r\n                  {htmlContent}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction JupyterViewer(props) {\r\n  // -1: auto, 0: hide, 1: show, 2: scroll\r\n  const DISPLAYS = ['hide', 'show', 'scroll'];\r\n\r\n  const [state, setState] = useState({\r\n    clickCellIndex: -1,\r\n  })\r\n\r\n  return (\r\n    <div\r\n      className=\"jupyter-viewer\"\r\n    >\r\n      {props.rawIpynb['cells'].map((cell, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"block\"\r\n            onMouseDown={() => {\r\n              setState({...state, clickCellIndex: index})\r\n            }}\r\n          >\r\n            {!('cell_type' in cell) ? null :\r\n              <BlockSource\r\n                cell={cell}\r\n                language={props.language}\r\n                highlighted={state.clickCellIndex === index}\r\n                display={DISPLAYS.indexOf(props.displaySource)}\r\n                showLineNumbers={props.showLineNumbers}\r\n                codeBlockStyles={props.codeBlockStyles}\r\n              />\r\n            }\r\n            {!('outputs' in cell) ? null :\r\n              <BlockOutput\r\n                cell={cell}\r\n                highlighted={state.clickCellIndex === index}\r\n                display={DISPLAYS.indexOf(props.displayOutput)}\r\n                mediaAlign={{left: 'flex-start', center: 'center', right: 'flex-end'}[props.mediaAlign]}\r\n              />\r\n            }\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nJupyterViewer.defaultProps = {\r\n  language: 'python',\r\n  showLineNumbers: true,\r\n  mediaAlign: 'center',\r\n  displaySource: 'auto',\r\n  displayOutput: 'auto',\r\n  codeBlockStyles: undefined,\r\n};\r\n\r\nJupyterViewer.propTypes = {\r\n  rawIpynb: PropTypes.object.isRequired,\r\n  language: PropTypes.string,\r\n  showLineNumbers: PropTypes.bool,\r\n  mediaAlign: PropTypes.oneOf(['left', 'center', 'right']),\r\n  displaySource: PropTypes.oneOf(['auto', 'hide', 'show']),\r\n  displayOutput: PropTypes.oneOf(['auto', 'hide', 'show', 'scroll']),\r\n  codeBlockStyles:  PropTypes.shape({\r\n    hljsStyle: PropTypes.oneOf(Object.keys(hljsStyles)),\r\n    lineNumberContainerStyle: PropTypes.object,\r\n    lineNumberStyle: PropTypes.object,\r\n    codeContainerStyle: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport default JupyterViewer;\r\n","import React, {useState} from 'react';\r\nimport nb_test from \"./nb_test.json\"\r\n\r\nimport JupyterViewer from \"./lib/JupyterViewer\";\r\nimport hljsStyles from \"./lib/hljsStyles\";\r\n\r\n\r\nfunction App(props) {\r\n  const [state, setState] = useState({\r\n    rawIpynb: nb_test,\r\n    mediaAlign: \"left\",\r\n    displaySource: \"auto\",\r\n    displayOutput: \"auto\",\r\n    showLineNumbers: true,\r\n    codeBlockStyles: undefined,\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}\r\n      >\r\n        <input\r\n          name=\"rawIpynb\"\r\n          type=\"file\"\r\n          onChange={e => {\r\n            if (e.target.files[0]) {\r\n              const reader = new FileReader();\r\n              reader.readAsText(e.target.files[0], \"UTF-8\");\r\n              reader.onload = (e) => {\r\n                setState({...state, rawIpynb: JSON.parse(e.target.result)})\r\n              };\r\n              reader.onerror = (e) => {\r\n                console.log('reader error!', e)\r\n              };\r\n            }\r\n          }}\r\n        />\r\n        <div>\r\n          <label htmlFor=\"mediaAlign\">mediaAlign</label>\r\n          <select\r\n            name=\"mediaAlign\"\r\n            onChange={e => {\r\n              setState({...state, mediaAlign: e.target.value})\r\n            }}\r\n          >\r\n            <option value=\"left\">left</option>\r\n            <option value=\"center\">center</option>\r\n            <option value=\"right\">right</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"displaySource\">displaySource</label>\r\n          <select\r\n            name=\"displaySource\"\r\n            onChange={e => {\r\n              setState({...state, displaySource: e.target.value})\r\n            }}\r\n          >\r\n            <option value=\"auto\">auto</option>\r\n            <option value=\"hide\">hide</option>\r\n            <option value=\"show\">show</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"displayOutput\">displayOutput</label>\r\n          <select\r\n            name=\"displayOutput\"\r\n            onChange={e => {\r\n              setState({...state, displayOutput: e.target.value})\r\n            }}\r\n          >\r\n            <option value=\"auto\">auto</option>\r\n            <option value=\"hide\">hide</option>\r\n            <option value=\"show\">show</option>\r\n            <option value=\"scroll\">scroll</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"showLineNumbers\">showLineNumbers</label>\r\n          <select\r\n            name=\"showLineNumbers\"\r\n            onChange={e => {\r\n              setState({...state, showLineNumbers: e.target.value === 'show'})\r\n            }}\r\n          >\r\n            <option value=\"show\">show</option>\r\n            <option value=\"hide\">hide</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"hljsStyle\">hljsStyle</label>\r\n          <select\r\n            name=\"hljsStyle\"\r\n            onChange={e => {\r\n              setState({\r\n                ...state,\r\n                codeBlockStyles: e.target.value === 'default' ? undefined : {\r\n                  hljsStyle: e.target.value,\r\n                }\r\n              })\r\n            }}\r\n          >\r\n            <option key=\"default\" value=\"default\">DEFAULT</option>\r\n            {Object.keys(hljsStyles).map(name => (\r\n              <option key={name} value={name}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {!state.rawIpynb ? null :\r\n        <JupyterViewer\r\n          rawIpynb={state.rawIpynb}\r\n          mediaAlign={state.mediaAlign}\r\n          showLineNumbers={state.showLineNumbers}\r\n          displaySource={state.displaySource}\r\n          displayOutput={state.displayOutput}\r\n          codeBlockStyles={state.codeBlockStyles}\r\n        />\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}